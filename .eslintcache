[{"C:\\it-kamasutra\\todolist\\src\\features\\TodolistsList\\tasks-reducer.ts":"1","C:\\it-kamasutra\\todolist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"2","C:\\it-kamasutra\\todolist\\src\\api\\todolists-api.ts":"3","C:\\it-kamasutra\\todolist\\src\\index.tsx":"4","C:\\it-kamasutra\\todolist\\src\\features\\TodolistsList\\TodolistsList.tsx":"5","C:\\it-kamasutra\\todolist\\src\\features\\TodolistsList\\todolists-reducer.ts":"6","C:\\it-kamasutra\\todolist\\src\\app\\App.tsx":"7","C:\\it-kamasutra\\todolist\\src\\features\\Login\\Login.tsx":"8","C:\\it-kamasutra\\todolist\\src\\features\\Login\\auth-reducer.ts":"9","C:\\it-kamasutra\\todolist\\src\\app\\store.ts":"10","C:\\it-kamasutra\\todolist\\src\\app\\app-reducer.ts":"11","C:\\it-kamasutra\\todolist\\src\\components\\EditableSpan\\EditableSpan.tsx":"12","C:\\it-kamasutra\\todolist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"13"},{"size":5633,"mtime":1596722126000,"results":"14","hashOfConfig":"15"},{"size":1773,"mtime":1596295538000,"results":"16","hashOfConfig":"15"},{"size":3084,"mtime":1616952027985,"results":"17","hashOfConfig":"15"},{"size":752,"mtime":1616928364641,"results":"18","hashOfConfig":"15"},{"size":4025,"mtime":1616945418345,"results":"19","hashOfConfig":"15"},{"size":4585,"mtime":1597327450000,"results":"20","hashOfConfig":"15"},{"size":2668,"mtime":1616952150824,"results":"21","hashOfConfig":"15"},{"size":3447,"mtime":1616952334752,"results":"22","hashOfConfig":"15"},{"size":1999,"mtime":1616952086674,"results":"23","hashOfConfig":"15"},{"size":1182,"mtime":1616936396104,"results":"24","hashOfConfig":"15"},{"size":2217,"mtime":1616950681165,"results":"25","hashOfConfig":"15"},{"size":952,"mtime":1594154724000,"results":"26","hashOfConfig":"15"},{"size":1092,"mtime":1596716576000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"100ttlm",{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\it-kamasutra\\todolist\\src\\features\\TodolistsList\\tasks-reducer.ts",["58","59"],"C:\\it-kamasutra\\todolist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["60","61","62"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\it-kamasutra\\todolist\\src\\api\\todolists-api.ts",[],"C:\\it-kamasutra\\todolist\\src\\index.tsx",[],["63","64"],"C:\\it-kamasutra\\todolist\\src\\features\\TodolistsList\\TodolistsList.tsx",["65","66","67","68","69","70","71","72"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nexport const TodolistsList: React.FC<PropsType> = ({demo = false}) => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const isLogged = useSelector<AppRootStateType, boolean>( state => state.auth.isLoggedIn);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (demo || !isLogged) {\r\n            return;\r\n        }\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n    if(!isLogged){\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                todolist={tl}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                                demo={demo}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n","C:\\it-kamasutra\\todolist\\src\\features\\TodolistsList\\todolists-reducer.ts",["73"],"import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {RequestStatusType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id != action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: 'all', entityStatus: 'idle'}, ...state]\r\n\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        case 'CHANGE-TODOLIST-FILTER':\r\n            return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.status} : tl)\r\n        case 'SET-TODOLISTS':\r\n            return action.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS', id, status } as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        //изменим глобальный статус приложения, чтобы вверху полоса побежала\r\n        dispatch(setAppStatusAC('loading'))\r\n        //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\r\n        dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                dispatch(removeTodolistAC(todolistId))\r\n                //скажем глобально приложению, что асинхронная операция завершена\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                dispatch(addTodolistAC(res.data.data.item))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                dispatch(changeTodolistTitleAC(id, title))\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof changeTodolistEntityStatusAC>\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>\r\n","C:\\it-kamasutra\\todolist\\src\\app\\App.tsx",["74"],"C:\\it-kamasutra\\todolist\\src\\features\\Login\\Login.tsx",["75"],"C:\\it-kamasutra\\todolist\\src\\features\\Login\\auth-reducer.ts",[],"C:\\it-kamasutra\\todolist\\src\\app\\store.ts",[],"C:\\it-kamasutra\\todolist\\src\\app\\app-reducer.ts",[],"C:\\it-kamasutra\\todolist\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"C:\\it-kamasutra\\todolist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],{"ruleId":"76","severity":1,"message":"77","line":5,"column":9,"nodeType":"78","messageId":"79","endLine":5,"endColumn":22},{"ruleId":"80","severity":1,"message":"81","line":13,"column":94,"nodeType":"82","messageId":"83","endLine":13,"endColumn":96},{"ruleId":"84","severity":1,"message":"85","line":15,"column":97,"nodeType":"86","endLine":15,"endColumn":130,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"85","line":20,"column":8,"nodeType":"86","endLine":20,"endColumn":41,"suggestions":"88"},{"ruleId":"84","severity":1,"message":"85","line":24,"column":8,"nodeType":"86","endLine":24,"endColumn":41,"suggestions":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"84","severity":1,"message":"94","line":36,"column":8,"nodeType":"86","endLine":36,"endColumn":10,"suggestions":"95"},{"ruleId":"84","severity":1,"message":"96","line":41,"column":8,"nodeType":"86","endLine":41,"endColumn":10,"suggestions":"97"},{"ruleId":"84","severity":1,"message":"96","line":46,"column":8,"nodeType":"86","endLine":46,"endColumn":10,"suggestions":"98"},{"ruleId":"84","severity":1,"message":"96","line":51,"column":8,"nodeType":"86","endLine":51,"endColumn":10,"suggestions":"99"},{"ruleId":"84","severity":1,"message":"96","line":56,"column":8,"nodeType":"86","endLine":56,"endColumn":10,"suggestions":"100"},{"ruleId":"84","severity":1,"message":"96","line":61,"column":8,"nodeType":"86","endLine":61,"endColumn":10,"suggestions":"101"},{"ruleId":"84","severity":1,"message":"96","line":66,"column":8,"nodeType":"86","endLine":66,"endColumn":10,"suggestions":"102"},{"ruleId":"84","severity":1,"message":"96","line":71,"column":8,"nodeType":"86","endLine":71,"endColumn":10,"suggestions":"103"},{"ruleId":"80","severity":1,"message":"81","line":10,"column":45,"nodeType":"82","messageId":"83","endLine":10,"endColumn":47},{"ruleId":"84","severity":1,"message":"104","line":30,"column":8,"nodeType":"86","endLine":30,"endColumn":10,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":59,"column":28,"nodeType":"108","endLine":59,"endColumn":45},"@typescript-eslint/no-unused-vars","'setAppErrorAC' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["109"],["110"],["111"],"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLogged'. Either include them or remove the dependency array.",["114"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["115"],["116"],["117"],["118"],["119"],["120"],["121"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["122"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",{"desc":"123","fix":"124"},{"desc":"123","fix":"125"},{"desc":"123","fix":"126"},"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"129","fix":"131"},{"desc":"129","fix":"132"},{"desc":"129","fix":"133"},{"desc":"129","fix":"134"},{"desc":"129","fix":"135"},{"desc":"129","fix":"136"},{"desc":"129","fix":"137"},"Update the dependencies array to be: [props]",{"range":"138","text":"139"},{"range":"140","text":"139"},{"range":"141","text":"139"},"Update the dependencies array to be: [demo, dispatch, isLogged]",{"range":"142","text":"143"},"Update the dependencies array to be: [dispatch]",{"range":"144","text":"145"},{"range":"146","text":"145"},{"range":"147","text":"145"},{"range":"148","text":"145"},{"range":"149","text":"145"},{"range":"150","text":"145"},{"range":"151","text":"145"},{"range":"152","text":"145"},[765,798],"[props]",[1071,1104],[1261,1294],[1324,1326],"[demo, dispatch, isLogged]",[1495,1497],"[dispatch]",[1666,1668],[1871,1873],[2084,2086],[2285,2287],[2432,2434],[2611,2613],[1293,1295]]